---
parameters:
  - name: serviceConnection
    type: string
  - name: whatIfEnabled
    type: boolean
    default: true
  - name: scriptFiles
    type: object
    default: 
      - displayName: "Example Deployment"
        templateFilePath: "./infra-as-code/bicep/modules/example/example.bicep"
        templateParametersFilePath: "./config/custom-parameters/example.parameters.all.json"
        managementGroupId: "00000000-0000-0000-0000-000000000000"
        subscriptionId: "00000000-0000-0000-0000-000000000000"
        resourceGroupName: "example-rg"
        location: "uksouth"
        deploymentType: "subscription" # tenant | managementGroup | subscription | resourceGroup

steps:
  - $${{ each scriptFile in parameters.scriptFiles }} :
    - task: AzurePowerShell@5
      displayName: $${{ scriptFile.displayName }}
      inputs:
        azureSubscription: $${{ parameters.serviceConnection }}
        pwsh: true
        azurePowerShellVersion: LatestVersion
        ScriptType: "InlineScript"
        Inline: |
          $deploymentType = "$${{ scriptFile.deploymentType }}"

          $deploymentTimeStamp = Get-Date -Format 'yyyyMMddTHHMMssffffZ'
          $deploymentName = "$${{ scriptFile.displayName }}".Replace(" ", "-")
          
          if($deploymentName.Length -gt 43) {
            $deploymentName = $deploymentName.Substring(0, 42)
          }

          $deploymentName = "$deploymentName-$deploymentTimeStamp"

          $inputObject = @{
            DeploymentName        = $deploymentName
            Location              = "$${{ scriptFile.location }}"
            TemplateFile          = "$${{ scriptFile.templateFilePath }}"
            TemplateParameterFile = "$${{ scriptFile.templateParametersFilePath }}"
            WhatIf                = [System.Convert]::ToBoolean("$${{ parameters.whatIfEnabled }}")
            Verbose               = $true
          }

          if ($deploymentType -eq "tenant") {
            New-AzTenantDeployment @inputObject
          }

          if ($deploymentType -eq "managementGroup") {
            $inputObject.ManagementGroupId = "$${{ scriptFile.managementGroupId }}"
            if ($inputObject.ManagementGroupId -eq "") {
              $inputObject.ManagementGroupId = (Get-AzContext).Tenant.TenantId
            }
            New-AzManagementGroupDeployment @inputObject
          }

          if ($deploymentType -eq "subscription") {
            Select-AzSubscription -SubscriptionId "$${{ scriptFile.subscriptionId }}"
            New-AzSubscriptionDeployment @inputObject
          }

          if ($deploymentType -eq "resourceGroup") {
            $inputObject.ResourceGroupName = "$${{ scriptFile.resourceGroupName }}"
            Select-AzSubscription -SubscriptionId "$${{ scriptFile.subscriptionId }}"
            New-AzResourceGroupDeployment @inputObject
          }
