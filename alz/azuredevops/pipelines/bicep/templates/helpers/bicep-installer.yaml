---
steps:
  - pwsh: |
      $installedVersion = (Get-InstalledModule AZ).Version
      $latestVersion = (Find-Module AZ).Version
      Write-Host "Latest AZ PowerShell Version: $latestVersion"
      Write-Host "Installed AZ PowerShell Version: $installedVersion"

      if($installedVersion -ne $latestVersion) {
        Write-Host "Upgrading Az PowerShell from $installedVersion to $latestVersion"
        Install-Module -Name AZ -Force -SkipPublisherCheck -AllowClobber

        $installedVersion = (Get-InstalledModule AZ).Version
        Write-Host "Installed AZ PowerShell Version is now: $installedVersion"
      }
    displayName: Get Latest AZ PowerShell Release Version

  - pwsh: |
      $TOOLS_PATH = $env:TOOLS_PATH
      $installDir = Join-Path -Path $TOOLS_PATH -ChildPath "bicep"

      $toolFileName = "bicep"
      $toolFilePath = Join-Path -Path $installDir -ChildPath $toolFileName
     
      if(!(Test-Path $installDir)) {
        New-Item -ItemType Directory -Path $installDir | Out-String | Write-Verbose
      }

      $url = "https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64"

      Invoke-WebRequest -Uri $url -OutFile "$toolFilePath" | Out-String | Write-Verbose

      $isExecutable = $(test -x $toolFilePath; 0 -eq $LASTEXITCODE)
        if(!($isExecutable)) {
          chmod +x $toolFilePath
      }

      $env:PATH = "$($installDir):$env:PATH"
      
      Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"

      bicep --version

      Write-Host "Installed Latest Bicep Version"

    displayName: Install Bicep
    env:
      TOOLS_PATH: $(Agent.ToolsDirectory)
